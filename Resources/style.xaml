<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:baseline_system.Resources">
    <!--MC - main color-->
    <!--TC - text color-->
    <!--AC - accent color-->
    <SolidColorBrush x:Key="MC_Dark" Color="#1D202F"/>
    <SolidColorBrush x:Key="MC_DarkOpacity" Color="#77626F73"/>
    <!--<SolidColorBrush x:Key="MC_DarkOpacity" Color="#77626F73"/>-->
    <SolidColorBrush x:Key="MC_Light" Color="#B8BBA8"/>

    <SolidColorBrush x:Key="TC_Main" Color="#B7D2D6"/>
    <SolidColorBrush x:Key="TC_Additional" Color="#B8BBA8"/>
    <!--<SolidColorBrush x:Key="TC_Additional" Color="#626F73"/>-->

    <SolidColorBrush x:Key="Border" Color="#626F73"/>
    
    <SolidColorBrush x:Key="AC_Dark" Color="#1e1f21"/>
    <SolidColorBrush x:Key="AC_Light" Color="Chartreuse"/>

    
    <Style x:Key="GridStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource MC_Dark}"/>
    </Style>

    <Style x:Key="GridAccentStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource AC_Dark}"/>
    </Style>

    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{StaticResource MC_Dark}"/>
    </Style>

    <Style x:Key="TextBlockMainStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TC_Main}" />
    </Style>

    <Style x:Key="TextBlockAdditionalStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TC_Additional}" />
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TC_Main}" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource AC_Dark}" />
                <Setter Property="Foreground" Value="{StaticResource AC_Light}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TC_Main}" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource AC_Dark}" />
                <Setter Property="Foreground" Value="{StaticResource AC_Light}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--BUTTON SETTING-->
    <Style x:Key="menuButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource MC_DarkOpacity}"/>
        <Setter Property="Foreground" Value="{StaticResource AC_Light}"/>
        <Setter Property="MinHeight" Value="25"/>

        <Setter Property="Margin" Value="0 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AC_Dark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TC_Main}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource AC_Light}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--BORDER SETTING-->
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <!--<Setter Property="Background" Value="{StaticResource MC_DarkOpacity}"/>-->
        <Setter Property="Background" Value="#3d454f"/>
        <!-- цвет закраски окна-->
    </Style>

    <Style x:Key="BorderSearchStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <!--<Setter Property="Background" Value="{StaticResource MC_DarkOpacity}"/>-->
        <Setter Property="Background" Value="{x:Null}"/>
        <!-- цвет закраски окна-->
    </Style>

    <!--DATAGRID SETTING-->
    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{StaticResource TC_Additional}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="Foreground" Value="{StaticResource TC_Additional}" />
        <!--  цвет всех букв  -->
        <Setter Property="Background" Value="{StaticResource AC_Dark}" />
        <!--  цвет задней подложки (не ячейки)  -->
        <Setter Property="RowBackground" Value="{StaticResource MC_Dark}" />
        <!--  цвет ячеек  -->
        <Setter Property="FontSize" Value="15" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource AC_Light}" />
    </Style>
    
    <Style x:Key="DataGridHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="black" />
        <!--  цвет букв в заголовке  -->
        <Setter Property="Background" Value="{StaticResource AC_Light}" />
        <!--  цвет подложки header  -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="15" />
    </Style>

    <!--TABCONTROL SETTING-->
    <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{StaticResource MC_Dark}" />
        <!-- цвет закраски окна-->
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="0" BorderBrush="{StaticResource MC_Light}" CornerRadius="0" Margin="1 0">
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                          ContentSource="Header" Margin="10,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource AC_Light}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MC_Dark}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TC_Main}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MC_Dark}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--COMBOBOX SETTING-->
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <!--обводка закрытого-->
            <Border Grid.ColumnSpan="2" Name="Border" BorderBrush= "{StaticResource Border}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource MC_Dark}" />
            <!--фон закрытой-->
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource MC_Dark}" />
            <!--квадрат по кд-->
            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="{StaticResource Border}"
            VerticalAlignment="Center" />
            <!--галка-->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource AC_Dark}"/>
                <!--заливка в квадрате при наведении-->
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource AC_Dark}"/>
                <!--заливка в квадрате при нажатии-->
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource MC_Light}"/>
                <!--заливка стрелки при нажатии-->
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <!--отключение-->
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource TC_Main}"/>
        <!--цвет текста-->
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                        <!--!!!!!!!-->

                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>

                        <!--Popup showing items-->

                        <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">

                                <!--подложка выпадающего-->

                                <Border Name="DropDownBorder" Background="{StaticResource MC_Dark}" Margin="0, 1, 0, 0" 
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource Border}"/>

                                <!--рамка вокруг выпадающего-->

                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource TC_Main}" />
    </Style>

    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource TC_Main}" />
    </Style>


    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="Foreground" Value="{StaticResource TC_Main}" />
        <!--цвет букв-->
        <Setter Property="Background" Value="Transparent" />
        <!--цвет задней подложки-->
        <Setter Property="BorderBrush" Value="Aqua" />
        <!--цвет всей рамки листа-->
        <Setter Property="BorderThickness" Value="0" />

        <Style.Triggers>
            <Trigger Property="SelectedItem" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>



        <!--<Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="Foreground" Value="White" />
        --><!--  цвет всех букв  --><!--
        <Setter Property="Background" Value="{StaticResource AC_Dark}" />
        --><!--  цвет задней подложки (не ячейки)  --><!--
        <Setter Property="RowBackground" Value="{StaticResource MC_Dark}" />
        --><!--  цвет ячеек  --><!--
        <Setter Property="FontSize" Value="15" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource AC_Light}" />
    </Style>
    <Style x:Key="DataGridHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="black" />
        --><!--  цвет букв в заголовке  --><!--
        <Setter Property="Background" Value="{StaticResource AC_Light}" />
        --><!--  цвет подложки header  --><!--
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="15" />
    </Style>
    
    <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{StaticResource MC_Dark}" />
        --><!-- цвет закраски окна--><!--
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        --><!-- цвет закраски окна--><!--
    </Style>

    --><!--  кнопка не юзера  --><!--
    <Style x:Key="ButtonStyleNoUser" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AC_Dark}" />
        <Setter Property="Foreground" Value="Chocolate" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Black" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    

    --><!-- combobox --><!--
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            --><!--обводка закрытого--><!--
            <Border Grid.ColumnSpan="2" Name="Border" BorderBrush= "{StaticResource Border}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource MC_Dark}" />
            --><!--фон закрытой--><!--
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource MC_Dark}" />
            --><!--квадрат по кд--><!--

            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="{StaticResource Border}"
            VerticalAlignment="Center" />
            --><!--галка--><!--
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource AC_Dark}"/>
                --><!--заливка в квадрате при наведении--><!--
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource AC_Dark}"/>
                --><!--заливка в квадрате при нажатии--><!--
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource MC_Light}"/>
                --><!--заливка стрелки при нажатии--><!--
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                --><!--отключение--><!--
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource MC_Light}"/>
        --><!--цвет текста--><!--
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        --><!--!!!!!!!--><!--
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        --><!-- Popup showing items --><!--
                        <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                --><!--подложка выпадающего--><!--
                                <Border Name="DropDownBorder" Background="{StaticResource MC_Dark}" Margin="0, 1, 0, 0" 
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource Border}"/>
                                --><!--рамка вокруг выпадающего--><!--
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="1,1,1,1" BorderBrush="{StaticResource MC_Light}" CornerRadius="0" Margin="1">
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                          ContentSource="Header" Margin="10,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Border}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource MC_Light}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MC_Dark}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="Foreground" Value="White" />
        --><!--цвет букв--><!--
        <Setter Property="Background" Value="Transparent" />
        --><!--цвет задней подложки--><!--
        <Setter Property="BorderBrush" Value="Aqua" />
        --><!--цвет всей рамки листа--><!--
        <Setter Property="BorderThickness" Value="0" />

        <Style.Triggers>
            <Trigger Property="SelectedItem" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>-->
</ResourceDictionary>